#include "Sprites/JDMC_CharBitmaps.hpp"
#include "JDMC_enum.hpp"

const std::unordered_map<char, std::vector<std::vector<bool>>> JDMC::CharBitmaps::charBitmaps = {
{'@', {{0, 1, 1, 1, 0},
	   {1, 0, 0, 0, 1},
	   {1, 0, 1, 1, 1},
	   {1, 0, 1, 0, 0},
	   {0, 1, 0, 1, 1}}},
{'!', {{0, 1, 0},
	   {0, 1, 0},
	   {0, 1, 0},
	   {0, 0, 0},
	   {0, 1, 0}}},
{'0', {{0, 1, 0},
	   {1, 0, 1},
	   {1, 0, 1},
	   {1, 0, 1},
	   {0, 1, 0}}},
{'1', {{0, 1, 0},
	   {1, 1, 0},
	   {0, 1, 0},
	   {0, 1, 0},
	   {1, 1, 1}}},
{'2', {{0, 1, 0},
	   {1, 0, 1},
	   {0, 0, 1},
	   {0, 1, 0},
	   {1, 1, 1}}},
{'3', {{1, 1, 0},
	   {0, 0, 1},
	   {0, 1, 0},
	   {0, 0, 1},
	   {1, 1, 1}}},
{'4', {{0, 0, 1},
	   {0, 1, 1},
	   {1, 0, 1},
	   {1, 1, 1},
	   {0, 0, 1}}},
{'5', {{1, 1, 1},
	   {1, 0, 0},
	   {1, 1, 0},
	   {0, 1, 1},
	   {1, 1, 0}}},
{'6', {{0, 1, 1},
	   {1, 0, 0},
	   {1, 1, 0},
	   {1, 0, 1},
	   {1, 1, 0}}},
{'7', {{1, 1, 1},
	   {0, 0, 1},
	   {0, 1, 0},
	   {0, 1, 0},
	   {0, 1, 0}}},
{'8', {{0, 1, 0},
	   {1, 0, 1},
	   {0, 1, 0},
	   {1, 0, 1},
	   {0, 1, 0}}},
{'9', {{0, 1, 0},
	   {1, 0, 1},
	   {0, 1, 1},
	   {1, 0, 1},
	   {0, 1, 0}}},
{'A', {{0, 1, 0},
	   {1, 0, 1},
	   {1, 1, 1},
	   {1, 0, 1},
	   {1, 0, 1}}},
{'B', {{1, 1, 0},
	   {1, 0, 1},
	   {1, 1, 0},
	   {1, 0, 1},
	   {1, 1, 0}}},
{'C', {{0, 1, 1},
	   {1, 0, 0},
	   {1, 0, 0},
	   {1, 0, 0},
	   {0, 1, 1}}},
{'D', {{1, 1, 0},
	   {1, 0, 1},
	   {1, 0, 1},
	   {1, 0, 1},
	   {1, 1, 0}}},
{'E', {{1, 1, 1},
	   {1, 0, 0},
	   {1, 1, 0},
	   {1, 0, 0},
	   {1, 1, 1}}},
{'F', {{1, 1, 1},
	   {1, 0, 0},
	   {1, 1, 0},
	   {1, 0, 0},
	   {1, 0, 0}}},
{'G', {{0, 1, 1},
	   {1, 0, 0},
	   {1, 0, 1},
	   {1, 0, 1},
	   {0, 1, 1}}},
{'H', {{1, 0, 1},
	   {1, 0, 1},
	   {1, 1, 1},
	   {1, 0, 1},
	   {1, 0, 1}}},
{'I', {{1, 1, 1},
	   {0, 1, 0},
	   {0, 1, 0},
	   {0, 1, 0},
	   {1, 1, 1}}},
{'J', {{0, 0, 1},
	   {0, 0, 1},
	   {0, 0, 1},
	   {1, 0, 1},
	   {0, 1, 0}}},
{'K', {{1, 0, 1},
	   {1, 1, 0},
	   {1, 0, 0},
	   {1, 1, 0},
	   {1, 0, 1}}},
{'L', {{1, 0, 0},
	   {1, 0, 0},
	   {1, 0, 0},
	   {1, 0, 0},
	   {1, 1, 1}}},
{'M', {{1, 0, 0, 0, 1},
	   {1, 1, 0, 1, 1},
	   {1, 0, 1, 0, 1},
	   {1, 0, 0, 0, 1},
	   {1, 0, 0, 0, 1}}},
{'N', {{1, 0, 0, 1},
	   {1, 1, 0, 1},
	   {1, 0, 1, 1},
	   {1, 0, 0, 1},
	   {1, 0, 0, 1}}},
{'O', {{0, 1, 1, 0},
	   {1, 0, 0, 1},
	   {1, 0, 0, 1},
	   {1, 0, 0, 1},
	   {0, 1, 1, 0}}},
{'P', {{1, 1, 0},
	   {1, 0, 1},
	   {1, 1, 0},
	   {1, 0, 0},
	   {1, 0, 0}}},
{'Q', {{0, 1, 1, 0},
	   {1, 0, 0, 1},
	   {1, 0, 0, 1},
	   {1, 0, 1, 1},
	   {0, 1, 1, 1}}},
{'R', {{1, 1, 0},
	   {1, 0, 1},
	   {1, 1, 0},
	   {1, 1, 0},
	   {1, 0, 1}}},
{'S', {{0, 1, 1},
	   {1, 0, 0},
	   {0, 1, 1},
	   {0, 0, 1},
	   {1, 1, 0}}},
{'T', {{1, 1, 1},
	   {0, 1, 0},
	   {0, 1, 0},
	   {0, 1, 0},
	   {0, 1, 0}}},
{'U', {{1, 0, 1},
	   {1, 0, 1},
	   {1, 0, 1},
	   {1, 0, 1},
	   {1, 1, 1}}},
{'V', {{1, 0, 1},
	   {1, 0, 1},
	   {1, 0, 1},
	   {1, 0, 1},
	   {0, 1, 0}}},
{'W', {{1, 0, 0, 0, 1},
	   {1, 0, 0, 0, 1},
	   {1, 0, 0, 0, 1},
	   {1, 0, 1, 0, 1},
	   {0, 1, 0, 1, 0}}},
{'X', {{1, 0, 1},
	   {1, 0, 1},
	   {0, 1, 0},
	   {1, 0, 1},
	   {1, 0, 1}}},
{'Y', {{1, 0, 1},
	   {1, 0, 1},
	   {0, 1, 0},
	   {0, 1, 0},
	   {0, 1, 0}}},
{'Z', {{1, 1, 1},
	   {0, 0, 1},
	   {0, 1, 0},
	   {1, 0, 0},
	   {1, 1, 1}}},
{'a', {{0, 0, 0, 0},
	   {0, 0, 0, 0},
	   {0, 1, 0, 1},
	   {1, 0, 1, 1},
	   {1, 1, 0, 1}}},
{'b', {{1, 0, 0},
	   {1, 0, 0},
	   {1, 1, 1},
	   {1, 0, 1},
	   {1, 1, 1}}},
{'c', {{0, 0, 0},
	   {0, 0, 0},
	   {1, 1, 1},
	   {1, 0, 0},
	   {1, 1, 1}}},
{'d', {{0, 0, 1},
	   {0, 0, 1},
	   {1, 1, 1},
	   {1, 0, 1},
	   {1, 1, 1}}},
{'e', {{0, 0, 0},
	   {0, 1, 0},
	   {1, 1, 1},
	   {1, 0, 0},
	   {1, 1, 1}}},
{'f', {{0, 1, 1},
	   {0, 1, 0},
	   {1, 1, 1},
	   {0, 1, 0},
	   {0, 1, 0}}},
{'g', {{0, 1, 0},
	   {1, 0, 1},
	   {0, 1, 1},
	   {0, 0, 1},
	   {1, 1, 0}}},
{'h', {{1, 0, 0},
	   {1, 0, 0},
	   {1, 1, 1},
	   {1, 0, 1},
	   {1, 0, 1}}},
{'i', {{0, 1, 0},
	   {0, 0, 0},
	   {0, 1, 0},
	   {0, 1, 0},
	   {0, 1, 0}}},
{'j', {{0, 0, 1},
	   {0, 0, 0},
	   {0, 0, 1},
	   {1, 0, 1},
	   {0, 1, 1}}},
{'k', {{1, 0, 0},
	   {1, 0, 1},
	   {1, 1, 0},
	   {1, 0, 1},
	   {1, 0, 1}}},
{'l', {{0, 1, 0},
	   {0, 1, 0},
	   {0, 1, 0},
	   {0, 1, 0},
	   {0, 1, 0}}},
{'m', {{0, 0, 0, 0, 0},
	   {0, 0, 0, 0, 0},
	   {1, 1, 0, 1, 1},
	   {1, 0, 1, 0, 1},
	   {1, 0, 0, 0, 1}}},
{'n', {{0, 0, 0, 0},
	   {0, 0, 0, 0},
	   {1, 0, 1, 0},
	   {1, 1, 0, 1},
	   {1, 0, 0, 1}}},
{'o', {{0, 0, 0},
	   {0, 0, 0},
	   {1, 1, 1},
	   {1, 0, 1},
	   {1, 1, 1}}},
{'p', {{0, 0, 0},
	   {1, 1, 0},
	   {1, 0, 1},
	   {1, 1, 0},
	   {1, 0, 0}}},
{'q', {{0, 0, 0},
	   {0, 1, 1},
	   {1, 0, 1},
	   {0, 1, 1},
	   {0, 0, 1}}},
{'r', {{0, 0, 0},
	   {0, 0, 0},
	   {1, 1, 1},
	   {1, 0, 0},
	   {1, 0, 0}}},
{'s', {{0, 0, 0},
	   {0, 1, 1},
	   {1, 1, 0},
	   {0, 0, 1},
	   {1, 1, 0}}},
{'t', {{0, 1, 0},
	   {0, 1, 0},
	   {1, 1, 1},
	   {0, 1, 0},
	   {0, 1, 1}}},
{'u', {{0, 0, 0},
	   {0, 0, 0},
	   {1, 0, 1},
	   {1, 0, 1},
	   {1, 1, 1}}},
{'v', {{0, 0, 0},
	   {0, 0, 0},
	   {1, 0, 1},
	   {1, 0, 1},
	   {0, 1, 0}}},
{'w', {{0, 0, 0, 0, 0},
	   {0, 0, 0, 0, 0},
	   {1, 0, 0, 0, 1},
	   {1, 0, 1, 0, 1},
	   {1, 1, 0, 1, 1}}},
{'x', {{0, 0, 0},
	   {0, 0, 0},
	   {1, 0, 1},
	   {0, 1, 0},
	   {1, 0, 1}}},
{'y', {{0, 0, 0},
	   {1, 0, 1},
	   {1, 1, 1},
	   {0, 0, 1},
	   {1, 1, 1}}},
{'z', {{0, 0, 0},
	   {0, 0, 0},
	   {1, 1, 1},
	   {0, 1, 0},
	   {1, 1, 1}}}
};

std::vector<std::wstring> JDMC::CharBitmaps::scaleBitmap(
	const std::vector<std::vector<bool>>& bitmap,
	int scale)
{
	std::vector<std::wstring> scaledBitmap;
	for (const auto& row : bitmap)
	{
		std::wstring scaledRow;
		for (bool pixel : row)
		{
			for (int i = 0; i < scale; i++)
				scaledRow += pixel ? JDMC::Pixel::PIXEL_SOLID : JDMC::Pixel::BLANK;
		}

		for (int i = 0; i < scale; ++i)
			scaledBitmap.push_back(scaledRow);
	}
	return scaledBitmap;
}

std::wstring JDMC::CharBitmaps::scaleLineBitmap(
	const std::vector<std::vector<bool>>& bitmap,
	int scale, int line)
{
	std::wstring scaledBitmap;
	for (bool pixel : bitmap[line])
	{
		for (int i = 0; i < scale; i++)
			scaledBitmap += pixel ? JDMC::Pixel::PIXEL_SOLID : JDMC::Pixel::BLANK;
	}
	scaledBitmap += L' ';
	return scaledBitmap;
}
